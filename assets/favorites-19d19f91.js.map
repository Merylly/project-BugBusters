{"version":3,"file":"favorites-19d19f91.js","sources":["../../src/js/burger-menu.js","../../src/js/api.js","../../src/js/quote.js","../../src/js/pagination.js","../../src/js/exercises-list.js","../../src/js/modal.js","../../src/js/favorites.js"],"sourcesContent":["\nconst refs = {\n    openModalBtn: document.querySelector('.js-open-menu'),\n    closeModalBtn: document.querySelector('.js-close-menu'),\n    modal: document.querySelector('.js-menu-container'),\n  };\n  refs.openModalBtn.addEventListener('click', toggleModal);\n  refs.closeModalBtn.addEventListener('click', toggleModal);\n  function toggleModal() {\n    refs.modal.classList.toggle('is-open');\n  }\n\n  const mobMenuBtnAct = document.querySelector('.mobile-menu-link');\n  const mobMenuHome = document.querySelector('.home-link');\n  const mobMenuFav = document.querySelector('.fav-link');\n  const activeClass = 'active';\n  const FAV_URL = 'http://localhost:5173/favorites.html';\n  \n  \n    window.addEventListener('load', () => {\n      if (window.location.pathname.endsWith('favorites.html')) {\n        mobMenuFav.classList.add(activeClass);\n        mobMenuHome.classList.remove(activeClass);\n      } else {\n        mobMenuHome.classList.add(activeClass);\n        mobMenuFav.classList.remove(activeClass);\n      }\n    })","import axios from 'axios';\n\nfunction getApiInfo({ filter, page = 1, limit = 12, type, ...params }) {\n  return axios.get(`https://energyflow.b.goit.study/api/${type}`, {\n    params: {\n      ...params,\n      filter,\n      page,\n      limit,\n    },\n  });\n}\n\nfunction postApiInfo(userEmail, type) {\n  return axios.post(`https://energyflow.b.goit.study/api/${type}`, userEmail);\n}\n\nexport { getApiInfo, postApiInfo };\n","import { getApiInfo } from './api.js';\n\nconst LOCAL_KEY_DATE = 'dateNow';\nconst LOCAL_KEY_QUOTE = 'quoteDay';\n\nconst quotePage = document.getElementById('description');\nconst authorPage = document.getElementById('author-quote');\n\nfunction getQuote() {\n  const currentDate = new Date();\n  const formattedDate = `${currentDate.getDate()}.${\n    currentDate.getMonth() + 1\n  }.${currentDate.getFullYear()}`;\n  const getDate = localStorage.getItem(LOCAL_KEY_DATE);\n\n  if (getDate === formattedDate) {\n    const localInfo = JSON.parse(localStorage.getItem(LOCAL_KEY_QUOTE));\n\n    // Перевірка, чи є дані в localStorage\n    if (localInfo) {\n      const { author, quote } = localInfo;\n      quotePage.textContent = quote;\n      authorPage.textContent = author;\n    } else {\n      // Якщо дані в localStorage відсутні, викликаємо getApiInfo для отримання нових даних\n      fetchQuote();\n    }\n    return;\n  }\n\n  if (!getDate || getDate !== formattedDate) {\n    localStorage.setItem(LOCAL_KEY_DATE, formattedDate);\n\n    // Викликаємо getApiInfo для отримання нових даних\n    fetchQuote();\n  }\n}\n\nfunction fetchQuote() {\n  getApiInfo({ type: 'quote' })\n    .then(({ data }) => {\n      const { author, quote } = data;\n\n      const quoteOfTheDay = {\n        author: author,\n        quote: quote,\n      };\n      localStorage.setItem(LOCAL_KEY_QUOTE, JSON.stringify(quoteOfTheDay));\n\n      quotePage.textContent = quote;\n      authorPage.textContent = author;\n    })\n    .catch(err => {\n      console.error('Error fetching quote:', err);\n    });\n}\n\ngetQuote();\n\n\n","import Pagination from 'tui-pagination';\n\nfunction createPaginationFilters(totalPages) {\n  if (window.innerWidth < 768) {\n    pageSize = 8;\n  } else {\n    pageSize = 12;\n  }\n\n  const paginationContainer = document.querySelector('.tui-pagination');\n  const instance = new Pagination(paginationContainer, {\n    totalItems: pageSize * totalPages,\n    itemsPerPage: pageSize,\n    visiblePages: 3,\n    centerAlign: true,\n  });\n\n  return instance;\n}\n\nfunction createPaginationSubFilters(totalPages) {\n  if (window.innerWidth < 768) {\n    pageSize = 8;\n  } else {\n    pageSize = 9;\n  }\n\n  const paginationContainer = document.querySelector('.tui-pagination');\n  const instance = new Pagination(paginationContainer, {\n    totalItems: pageSize * totalPages,\n    itemsPerPage: pageSize,\n    visiblePages: 3,\n    centerAlign: true,\n  });\n\n  return instance;\n}\n\nexport { createPaginationFilters, createPaginationSubFilters };\n","import { getApiInfo } from './api.js';\nimport { createPaginationFilters } from './pagination.js'; \n\n// Вибір з DOM\nconst switchItems = document.querySelectorAll('.switch-item');\nconst cardContainer = document.querySelector(\".bp-list\");\nconst paginContainer = document.querySelector('#tui-pagination-container');\nconst exercisesList = document.querySelector('.exercises-list');\n\n// Для пагінації\nlet itemsPerPage = 8;\nlet currentPage = 1;\nlet paginationInstance; \nlet totalPages; \n\n// створення карток\n// Оновлення кількості карток (при завантаженні сторінки та при зміні розміру вікна)\nwindow.addEventListener('load', () => {\n    updateItemsPerPage();\n    renderPage();\n\n    // Обробника кліку до кожного елемента карток вправ\n    const exercisesListItems = document.querySelectorAll('.exercises-item');\n    exercisesListItems.forEach(card => {\n        card.addEventListener('click', event => handleExerciseCardClick(event));\n    });\n});\n\nif (exercisesList) {\n    exercisesList.addEventListener('click', function (event) {\n        const targetItem = event.target.closest('.exercises-item');\n    \n        if (targetItem) {\n            event.preventDefault();\n    \n            const bpList = document.querySelector('.bp-list');\n            if (bpList) {\n                bpList.classList.remove('visually-hidden');\n            }\n            exercisesList.classList.add('visually-hidden');\n            \n            const urlParams = new URLSearchParams(window.location.search); // беремо значення урла яке є зараз\n            const exerciseKey = targetItem.getAttribute(\"data-filter\"); // беремо значення атрибута\n            const exerciseValue = targetItem.getAttribute(\"data-name\");\n    \n            console.log(exerciseKey);\n            console.log(exerciseValue);\n    \n    \n            urlParams.set( exerciseKey.toLowerCase(), exerciseValue.toLowerCase() );\n            const newUrl = `${window.location.pathname}?${urlParams.toString()}`;\n            window.history.replaceState(null, null, newUrl); // задаю квері параметри в урлу\n    \n            renderPage(exerciseValue);\n        }\n    });\n}\n\nwindow.addEventListener(\n    'resize',\n    debounce(() => {\n        const prevItemsPerPage = itemsPerPage;\n        updateItemsPerPage();\n\n        if (prevItemsPerPage !== itemsPerPage) {\n            renderPage();\n        }\n    }, 250)\n);\n\n\n// Затримувач для resize\nfunction debounce(func, wait) {\n    let timeout;\n    return function executedFunction(...args) {\n        const later = () => {\n            clearTimeout(timeout);\n            func(...args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n\n// Визначення кількості карток на сторінці (в залежності від розміру екрану)\nfunction updateItemsPerPage() {\n    if (window.innerWidth < 768) {\n        itemsPerPage = 8;\n    } else {\n        itemsPerPage = 9;\n    }\n}\n\n// Отримання даних з API (асинхронний запит)\nasync function fetchDataFromApi(exercise) {\n    try {\n        const response = await getApiInfo({ ...exercise , type: 'exercises' });\n        return response.data;\n    } catch (error) {\n        throw new Error('Failed to fetch data from API: ' + error.message);\n    }\n}\n\n// Рендеринг сторінки\nasync function renderPage() {\n    try {\n        const activeContainer = document.querySelector('.switch-item.is-active');\n        if (!activeContainer) {\n            return;\n        }\n\n        // Для запиту\n        const query = activeContainer.textContent.trim().toLowerCase();\n        if (!query) {\n            console.error('Query is undefined');\n            return;\n        }\n\n        // Для даних з API\n        const searchParams = new URLSearchParams(window.location.search); // Беремо дані з url qewry params\n        let bodypart = searchParams.get(\"bodypart\");\n        let muscles = searchParams.get(\"muscles\");\n        let equipment = searchParams.get(\"equipment\");\n\n        if (searchParams.size) {\n            const exerciseData = await fetchDataFromApi({ bodypart, muscles, equipment });\n\n            // Рендеринг вправ (поточна сторінка)\n            renderExerciseCards(exerciseData.results.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage));\n        }\n\n        const urlParams = new URLSearchParams(window.location.search); // очищають url\n        window.history.replaceState(null, null, window.location.pathname ); // очищають url\n\n    } catch (error) {\n        console.error('Error fetching and rendering data:', error);\n    }\n}\n\n\n\n// Рендеринг карток вправ\nasync function renderExerciseCards(exerciseData) {\n    try {\n        if (!exerciseData || exerciseData.length === 0) {\n            console.log('No exercise data to render');\n            return;\n        }\n\n        console.log(\"Rendering exercise cards with data:\", exerciseData);\n\n        let markup = '';\n        exerciseData.forEach(exercise => {\n            markup += renderExerciseCardMarkup(exercise);\n        });\n\n        cardContainer.innerHTML = markup;\n        paginContainer.innerHTML = '';\n\n        if (totalPages > 1) {\n          paginationInstance = createPaginationFilters(\n            paginContainer,\n            totalPages,\n            currentPage,\n            pageSize,\n            onPageChange\n          );\n        }\n    } catch (error) {\n        console.error('Error rendering exercise cards:', error);\n    }\n}\n\n// Шаблон для картки вправ\nfunction renderExerciseCardMarkup(exercise) {\n\n    let markup = `\n    <li class=\"bp-item\" data-id=\"${exercise._id}\">\n    <div class=\"bp-exercisecard-wraper\">\n        <div class=\"bp-rating-info\">\n        <span class=\"bp-workout-span\">WORKOUT</span>\n        <span class=\"bp-rating\">${capitalizeFirstLetter(exercise.rating)}</span>\n        <svg\n            class=\"icon-star\"\n            viewBox=\"0 0 32 32\"\n            width=\"13\"\n            height=\"13\"\n            >\n            <use href=\"./img/sprite.svg#icon-star\"></use>\n        </svg>\n    </div>\n\n    <button class=\"bp-start-button\" type=\"button\">\n        Start\n        <svg\n            class=\"bp-arrow\"\n            viewBox=\"0 0 32 32\"\n            width=\"14\"\n            height=\"14\"\n            >\n            <use href=\"./img/sprite.svg#icon-arrow\" />\n        </svg>\n    </button>\n    </div>\n\n    <div class=\"bp-exercise-name\">\n        <svg\n            class=\"bp-run-icon\"\n            viewBox=\"0 0 32 32\"\n            width=\"14.07\"\n            height=\"16\"\n        >\n            <use href=\"./img/sprite.svg#icon-running-man\" />\n        </svg>\n        <span>${capitalizeFirstLetter(exercise.name)}</span>\n    </div>\n\n    <div class=\"bp-block-info\">\n        <div class=\"bp-calories\">\n            <span class=\"bp-block-info-title\">Burned calories: </span>\n            <span class=\"bp-block-info-value calories-value\">${capitalizeFirstLetter(exercise.burnedCalories)}</span>\n            <span class=\"bp-block-info-value\">/ ${exercise.time} min</span>\n        </div>\n        <div class=\"bp-body-part\">\n            <span class=\"bp-block-info-title\">Body part: </span>\n            <span class=\"bp-block-info-value body-part-value\">${capitalizeFirstLetter(exercise.bodyPart)}</span>\n        </div>\n        <div class=\"bp-target\">\n            <span class=\"bp-block-info-title\">Target: </span>\n            <span class=\"bp-block-info-value bp-target-value\">${capitalizeFirstLetter(exercise.target)}</span>\n        </div>\n    </div>\n    </li>`;\n\n    return markup;\n}\nfunction capitalizeFirstLetter(word) {\n    // Перевірка чи починається слово з букви\n    if (/^[a-zA-Z]/.test(word)) {\n        return word.charAt(0).toUpperCase() + word.slice(1);\n    } else {\n        return word; // якщо перший символ є цифрою або іншим символом, нічого не робимо\n    }\n}\n// Обробник на елемент переключення\nfunction handleSwitchItemClick() {\n    switchItems.forEach(item => item.classList.remove('is-active'));\n    this.classList.add('is-active');\n    currentPage = 1;\n\n    renderPage();\n}\n\n// Додавання обробника кліку до кожного елемента переключення\n// switchItems.forEach(item => {\n//     item.addEventListener('click', handleSwitchItemClick);\n// });\n\n\n\n\nexport { capitalizeFirstLetter };\n","import axios from 'axios';\nimport { getApiInfo } from './api.js';\nimport { capitalizeFirstLetter } from '../js/exercises-list.js';\nimport { checkAddedExercises } from './favorites.js';\n\nconst STORAGE_KEY = 'exercise';\n\nconst modalExBtn = document.querySelector('.bp-list');\nconst modalWindow = document.querySelector('.backdrop');\n\nif (modalExBtn) {\n  modalExBtn.addEventListener('click', handleModal);\n}\n\nexport async function handleModal(event) {\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  modalWindow.classList.remove('is-hidden');\n  const liEl = event.target.closest('li');\n\n  const cardId = liEl.dataset.id;\n  try {\n    const card = await axios.get(\n      `https://energyflow.b.goit.study/api/exercises/${cardId}`\n    );\n    createModalMarkup(card.data);\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(card.data));\n    const starsDiv = document.querySelector('.stars-wraper');\n    const stars = starsDiv.children;\n    const rating = Math.round(card.data.rating);\n    starsRating(stars, rating);\n  } catch (err) {\n    console.log(err);\n  }\n\n  const modalCloseBtn = document.querySelector('.modal-close-btn');\n  modalCloseBtn.addEventListener('click', handleModalClose);\n\n  window.addEventListener('keydown', onEscPress);\n\n  modalWindow.addEventListener('click', event => {\n    if (event.currentTarget === event.target) {\n      handleModalClose(event);\n    }\n  });\n}\n\nfunction handleModalClose() {\n  modalWindow.classList.add('is-hidden');\n  window.removeEventListener('keydown', onEscPress);\n}\n\nfunction onEscPress(event) {\n  if (event.code === 'Escape') {\n    handleModalClose(event);\n  }\n}\n\nfunction createModalMarkup({\n  gifUrl,\n  name,\n  rating,\n  target,\n  bodyPart,\n  equipment,\n  burnedCalories,\n  popularity,\n  description,\n  _id,\n}) {\n  const markup = `<div class=\"modal\">\n    <button class=\"modal-close-btn\" type=\"button\">\n      <svg class=\"close-me-icon\" viewBox=\"0 0 32 32\" width=\"24\" height=\"24\">\n        <use href=\"./img/sprite.svg#icon-close\"></use>\n      </svg>\n    </button>\n    <div class=\"modal-wraper\">\n      <div class=\"modal-exercises-image\">\n        <img\n          class=\"exercise-image\"\n          src=\"${gifUrl}\"\n          alt=\"showing exercise\"\n        />\n      </div>\n      <div class=\"modal-info-wraper\">\n        <h2 class=\"me-title\">${capitalizeFirstLetter(name)}</h2>\n        <div class=\"rating-wraper\">\n          <span class=\"rating\">${Math.round(rating).toFixed(1)}</span>\n          <div class=\"stars-wraper\">\n            <svg class=\"icon-star dimmed-star\" viewBox=\"0 0 32 32\" width=\"13\" height=\"13\">\n              <use href=\"./img/sprite.svg#icon-star\"></use>\n            </svg>\n            <svg class=\"icon-star dimmed-star\" viewBox=\"0 0 32 32\" width=\"13\" height=\"13\">\n              <use href=\"./img/sprite.svg#icon-star\"></use>\n            </svg>\n            <svg class=\"icon-star dimmed-star\" viewBox=\"0 0 32 32\" width=\"13\" height=\"13\">\n              <use href=\"./img/sprite.svg#icon-star\"></use>\n            </svg>\n            <svg class=\"icon-star dimmed-star\" viewBox=\"0 0 32 32\" width=\"13\" height=\"13\">\n              <use href=\"./img/sprite.svg#icon-star\"></use>\n            </svg>\n            <svg\n              class=\"icon-star dimmed-star\"\n              viewBox=\"0 0 32 32\"\n              width=\"13\"\n              height=\"13\"\n            >\n              <use href=\"./img/sprite.svg#icon-star\"></use>\n            </svg>\n          </div>\n        </div>\n        <div class=\"me-block-info\">\n          <div class=\"me-block-info-target\">\n            <h3 class=\"block-info-name\">Target</h3>\n            <span class=\"block-info-value\">${capitalizeFirstLetter(\n              target\n            )}</span>\n          </div>\n          <div class=\"me-block-info-target\">\n            <h3 class=\"block-info-name\">Body Part</h3>\n            <span class=\"block-info-value\">${capitalizeFirstLetter(\n              bodyPart\n            )}</span>\n          </div>\n          <div class=\"me-block-info-target\">\n            <h3 class=\"block-info-name\">Equipment</h3>\n            <span class=\"block-info-value\">${capitalizeFirstLetter(\n              equipment\n            )}</span>\n          </div>\n          <div class=\"me-block-info-target\">\n            <h3 class=\"block-info-name\">Popular</h3>\n            <span class=\"block-info-value\">${popularity}</span>\n          </div>\n          <div class=\"me-block-info-target\">\n            <h3 class=\"block-info-name\">Burned Calories</h3>\n            <div class=\"calories-wrap\">\n              <span class=\"block-info-value\">${burnedCalories}</span\n              ><!--\n--><span class=\"block-info-static-value\">/3 min</span>\n            </div>\n          </div>\n        </div>\n        <p class=\"exersice-text\">\n          ${capitalizeFirstLetter(description)}\n        </p>\n        <button class=\"add-to-favorites-btn\" type=\"button\">\n         ${checkAddedExercises(_id)}\n        </button>\n        <button class=\"give-rating-btn\" type=\"button\">Give a rating</button>\n      </div>   \n       </div>\n    </div> \n    `;\n  modalWindow.innerHTML = markup;\n}\n\nfunction starsRating(array, rating) {\n  const arr = Array.from(array);\n  arr.forEach((star, i) => {\n    i < rating ? star.classList.remove('dimmed-star') : null;\n  });\n}\n","import { getApiInfo } from './api.js';\nimport { postApiInfo } from './api.js';\nimport { handleModal } from './modal.js';\n\nconst FAVORITES_KEY = 'favorites';\n\nconst listFavoritesContainer = document.querySelector('.list-favorites');\nconst addToFavBtn = document.querySelector('.add-to-favorites-btn');\nconst removeFromVav = document.querySelector('.delete-from-fav');\nconst startModalMenu = document.querySelector('.start-btn');\nconst modalContainer = document.querySelector('.backdrop');\nconst defaultMessage = document.querySelector('.message-block-favorites');\n\nif (listFavoritesContainer) {\n  const favoritesList = JSON.parse(localStorage.getItem(FAVORITES_KEY)) || [];\n  renderFavoritesList(favoritesList);\n  listFavoritesContainer.addEventListener('click', onDeleteExerciseBtnClick);\n}\n\nif (modalContainer) {\n  modalContainer.addEventListener('click', onAddToFavoritesBtnClick);\n}\n\nfunction onDeleteExerciseBtnClick(event) {\n  const deleteBTN = event.target.closest('.delete-from-fav');\n  if (deleteBTN) {\n    const exerciseID = deleteBTN.dataset.id;\n    const favoritesEx = JSON.parse(localStorage.getItem(FAVORITES_KEY)) || [];\n    const exercisesWithoutDeletedID = favoritesEx.filter(\n      ({ _id }) => _id !== exerciseID\n    );\n    console.log(exercisesWithoutDeletedID);\n    localStorage.setItem(\n      FAVORITES_KEY,\n      JSON.stringify(exercisesWithoutDeletedID)\n    );\n    renderFavoritesList(exercisesWithoutDeletedID);\n  }\n\n  // const openModalBtn = event.target.classList.contains('start-btn');\n  // if (openModalBtn) {\n  //   const exerciseID = deleteBTN.dataset.id;\n  // }\n}\n\nexport function onAddToFavoritesBtnClick(event) {\n  const closestListItem = event.target.classList.contains(\n    'add-to-favorites-btn'\n  );\n  if (!closestListItem) {\n    return;\n  }\n  const favoritesExercise =\n    JSON.parse(localStorage.getItem(FAVORITES_KEY)) || [];\n\n  const exercise = JSON.parse(localStorage.getItem('exercise'));\n\n  if (event.target.textContent.trim() === 'Add to favorites') {\n    favoritesExercise.push(exercise);\n    localStorage.setItem(FAVORITES_KEY, JSON.stringify(favoritesExercise));\n    event.target.innerHTML = `Remove from <svg class=\"heart-icon\" viewBox=\"0 0 32 32\" width=\"13\" height=\"13\">\n            <use href=\"../img/sprite.svg#icon-like\" />\n          </svg>`;\n  } else {\n    const fe = favoritesExercise.filter(({ _id }) => _id !== exercise._id);\n    localStorage.setItem(FAVORITES_KEY, JSON.stringify(fe));\n    event.target.innerHTML = `Add to favorites <svg class=\"heart-icon\" viewBox=\"0 0 32 32\" width=\"13\" height=\"13\">\n            <use href=\"../img/sprite.svg#icon-like\" />\n          </svg>`;\n  }\n}\n\nexport function checkAddedExercises(id) {\n  const favoritesExercises =\n    JSON.parse(localStorage.getItem(FAVORITES_KEY)) || [];\n  const isAdded = favoritesExercises.find(exercise => id === exercise._id);\n  if (isAdded) {\n    return `Remove from <svg class=\"heart-icon\" viewBox=\"0 0 32 32\" width=\"13\" height=\"13\">\n            <use href=\"../img/sprite.svg#icon-like\" />\n          </svg>`;\n  } else {\n    return `Add to favorites <svg class=\"heart-icon\" viewBox=\"0 0 32 32\" width=\"13\" height=\"13\">\n            <use href=\"../img/sprite.svg#icon-like\" />\n          </svg>`;\n  }\n}\nfunction renderFavoritesList(favoritesList) {\n  console.log(favoritesList);\n  if (favoritesList.length === 0) {\n    defaultMessage.classList.remove('hidden');\n    listFavoritesContainer.innerHTML = '';\n    return;\n  }\n  defaultMessage.classList.add('hidden');\n  const cardMarkup = favoritesList\n    .map(\n      cardInfo => `\n        <li class=\"item-favorites\" >\n             <div class=\"workout-block\">\n               <p class=\"workout-title\">Workout</p>\n               <button class=\"delete-from-fav\" type=\"button\" data-id=\"${cardInfo._id}\">\n                 <svg class=\"delete-icon\" width=\"16\" height=\"16\">\n                   <use href=\"../img/sprite.svg#icon-delete\"></use>\n                 </svg>\n               </button>\n             </div>\n             <button class=\"start-btn\" type=\"button\">\n               Start\n               <svg class=\"arrow-icon\" width=\"14\" height=\"14\">\n                 <use href=\"../img/sprite.svg#icon-arrow\"></use>\n               </svg>\n             </button>\n             <div class=\"ex-title-block\">\n               <div class=\"icon-man-wraper\">\n                 <svg class=\"man-icon\" width=\"16\" height=\"16\">\n                   <use href=\"../img/sprite.svg#icon-running-man\"></use>\n                 </svg>\n               </div>\n               <h3 class=\"ex-title\">${cardInfo.name}</h3>\n             </div>\n             <ul class=\"list-ex-category\">\n               <li>\n                 <p class=\"category-text-accent\">Burned calories:<span class=\"category-text\"> ${cardInfo.burnedCalories}/ 3 min</span\n                   >\n                 </p>\n               </li>\n               <li>\n                 <p class=\"category-text-accent\">Body part:<span class=\"category-text\"> ${cardInfo.bodyPart}</span>\n                 </p>\n               </li>\n               <li>\n                 <p class=\"category-text-accent\">\n                   Target:<span class=\"category-text\"> ${cardInfo.target}</span>\n                 </p>\n               </li>\n             </ul>\n           </li>\n    `\n    )\n    .join('');\n\n  listFavoritesContainer.innerHTML = cardMarkup;\n}\n\n// EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\n// First variant\n// EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\n\n// const refs = {\n//   favoritesCard: document.getElementById('favorites-container'),\n//   removeCards: document.querySelector('.container-remove-favorites'),\n//   deleteButtons: document.querySelectorAll('.button-remove'),\n//   galleryWindow: document.querySelector('.js-gallery'),\n// };\n// function savedCardsStorage() {\n//   try {\n//     const savedCards = JSON.parse(localStorage.getItem('addKeyID')) || [];\n//     displayFavoriteCards(savedCards);\n//   } catch (err) {\n//     console.log(err);\n//   }\n// }\n// function displayFavoriteCards(savedCards) {\n//   if (!savedCards || savedCards.length === 0) {\n//     showRemoveCards();\n//   } else {\n//     createCardFavorites(savedCards);\n//     hideRemoveCards();\n//   }\n// }\n// refs.galleryWindow.addEventListener('click', deleteFavorites);\n// function deleteFavorites(e) {\n//   if (e.target.classList.contains('js-remove-favorites')) {\n//     const cardId = e.target.closest('.list-favorites-item').dataset.id;\n//     removeFavoriteCard(cardId);\n//     e.target.closest('.list-favorites-item').remove();\n//     const savedCards = JSON.parse(localStorage.getItem('addKeyID')) || [];\n//     if (savedCards.length === 0) {\n//       showRemoveCards();\n//     }\n//   }\n// }\n// function removeFavoriteCard(id) {\n//   let savedCards = JSON.parse(localStorage.getItem('addKeyID')) || [];\n//   savedCards = savedCards.filter(card => card !== id);\n//   localStorage.setItem('addKeyID', JSON.stringify(savedCards));\n// }\n// function showRemoveCards() {\n//   refs.removeCards.classList.remove('is-hidden');\n// }\n// function hideRemoveCards() {\n//   refs.removeCards.classList.add('is-hidden');\n// }\n\n// if (window.location.pathname.endsWith('/favorites.html')) {\n//   savedCardsStorage();\n// }\n// function createCardFavorites(arr) {\n//   Promise.all(\n//     arr.map(value => getAccess({ typeFilter: 'exercises', id: value }))\n//   )\n//     .then(results => {\n//       const dataList = results.map(result => result.data);\n//       const markup = createMarkup(dataList);\n//       const favoritesCard = document.getElementById('favorites-container');\n\n//       if (favoritesCard) {\n//         favoritesCard.insertAdjacentHTML('beforeend', markup);\n//       }\n//     })\n//     .catch(err => console.error(err));\n// }\n// function createMarkup(arr) {\n//   return arr\n//     .map(\n//       ({ name, target, bodyPart, burnedCalories, _id }) =>\n//         `\n//         <li class=\"item-favorites\" data-id=\"${_id}\">\n//              <div class=\"workout-block\">\n//                <p class=\"workout-title\">Workout</p>\n//                <button class=\"delete-from-fav button-remove\" type=\"button\">\n//                  <svg class=\"delete-icon\" width=\"16\" height=\"16\">\n//                    <use href=\"../img/sprite.svg#icon-delete\"></use>\n//                  </svg>\n//                </button>\n//              </div>\n//              <button class=\"start-btn\" type=\"button\">\n//                Start\n//                <svg class=\"arrow-icon\" width=\"14\" height=\"14\">\n//                  <use href=\"../img/sprite.svg#icon-arrow\"></use>\n//                </svg>\n//              </button>\n//              <div class=\"ex-title-block\">\n//                <div class=\"icon-man-wraper\">\n//                  <svg class=\"man-icon\" width=\"16\" height=\"16\">\n//                    <use href=\"../img/sprite.svg#icon-running-man\"></use>\n//                  </svg>\n//                </div>\n//                <h3 class=\"ex-title\">${name}</h3>\n//              </div>\n//              <ul class=\"list-ex-category\">\n//                <li>\n//                  <p class=\"category-text\">\n//                    <span class=\"category-text-accent\">Burned calories: ${burnedCalories} </span\n//                    >200/ 3 min\n//                  </p>\n//                </li>\n//                <li>\n//                  <p class=\"category-text\">\n//                    <span class=\"category-text-accent\">Body part: ${bodyPart}: </span>Waist\n//                  </p>\n//                </li>\n//                <li>\n//                  <p class=\"category-text\">\n//                    <span class=\"category-text-accent\">Target: ${target}: </span>Abs\n//                  </p>\n//                </li>\n//              </ul>\n//            </li>\n//     `\n//     )\n//     .join('');\n// }\n"],"names":["refs","toggleModal","mobMenuHome","mobMenuFav","activeClass","getApiInfo","filter","page","limit","type","params","axios","postApiInfo","userEmail","LOCAL_KEY_DATE","LOCAL_KEY_QUOTE","quotePage","authorPage","getQuote","currentDate","formattedDate","getDate","localInfo","author","quote","fetchQuote","data","quoteOfTheDay","err","createPaginationFilters","totalPages","paginationContainer","Pagination","cardContainer","paginContainer","exercisesList","itemsPerPage","currentPage","updateItemsPerPage","renderPage","card","event","targetItem","bpList","urlParams","exerciseKey","exerciseValue","newUrl","debounce","prevItemsPerPage","func","wait","timeout","args","later","fetchDataFromApi","exercise","error","activeContainer","searchParams","bodypart","muscles","equipment","exerciseData","renderExerciseCards","markup","renderExerciseCardMarkup","capitalizeFirstLetter","word","STORAGE_KEY","modalExBtn","modalWindow","handleModal","cardId","createModalMarkup","stars","rating","starsRating","handleModalClose","onEscPress","gifUrl","name","target","bodyPart","burnedCalories","popularity","description","_id","checkAddedExercises","array","star","i","FAVORITES_KEY","listFavoritesContainer","modalContainer","defaultMessage","favoritesList","renderFavoritesList","onDeleteExerciseBtnClick","onAddToFavoritesBtnClick","deleteBTN","exerciseID","exercisesWithoutDeletedID","favoritesExercise","fe","id","cardMarkup","cardInfo"],"mappings":"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"}